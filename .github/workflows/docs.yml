name: Deploy Documentation

on:
  push:
    branches:
      - main
      - develop
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
      - '.github/workflows/docs.yml'
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
      - 'mkdocs.yml'
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for git-revision-date-localized plugin
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r docs/requirements.txt
      
      - name: Build documentation
        run: mkdocs build --verbose
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site
  
  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  deploy-readthedocs:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r docs/requirements.txt
          pip install sphinx sphinx-rtd-theme
      
      - name: Build Sphinx docs
        run: |
          cd docs
          sphinx-build -b html . _build/html
      
      - name: Trigger Read the Docs build
        env:
          RTD_TOKEN: ${{ secrets.READTHEDOCS_TOKEN }}
        run: |
          # Only trigger if token is set
          if [ -n "${RTD_TOKEN}" ]; then
            curl -X POST \
              -H "Authorization: Token ${RTD_TOKEN}" \
              https://readthedocs.org/api/v3/projects/pan-config-viewer/versions/latest/builds/
          else
            echo "READTHEDOCS_TOKEN not set, skipping RTD build trigger"
          fi

  validate-links:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r docs/requirements.txt
          pip install linkchecker
      
      - name: Build documentation
        run: mkdocs build
      
      - name: Check links
        run: |
          # Start local server
          python -m http.server 8000 --directory site &
          SERVER_PID=$!
          sleep 5
          
          # Check links
          linkchecker http://localhost:8000 \
            --ignore-url=^mailto: \
            --ignore-url=^https://github.com/.*/edit/ \
            --check-extern
          
          # Stop server
          kill $SERVER_PID